x-logging:
  &default-logging
  options:
    max-size: ${LOG_MAX_SIZE}
    max-file: ${LOG_MAX_FILE}
  driver: ${LOG_DRIVER}

x-influxdb-init-common-environment: &influxdb-init-common-environment
  DOCKER_INFLUXDB_INIT_MODE: ${DOCKER_INFLUXDB_INIT_MODE}
  DOCKER_INFLUXDB_INIT_USERNAME_FILE: ${DOCKER_INFLUXDB_INIT_USERNAME_FILE}
  DOCKER_INFLUXDB_INIT_PASSWORD_FILE: ${DOCKER_INFLUXDB_INIT_PASSWORD_FILE}
  DOCKER_INFLUXDB_INIT_ADMIN_TOKEN_FILE: ${DOCKER_INFLUXDB_INIT_ADMIN_TOKEN_FILE}
  DOCKER_INFLUXDB_INIT_ORG: ${DOCKER_INFLUXDB_INIT_ORG}
  DOCKER_INFLUXDB_INIT_BUCKET: ${DOCKER_INFLUXDB_INIT_BUCKET}
  DOCKER_INFLUXDB_INIT_RETENTION: ${DOCKER_INFLUXDB_INIT_RETENTION}
  DOCKER_INFLUXDB_INIT_PORT: ${DOCKER_INFLUXDB_INIT_PORT}
  DOCKER_INFLUXDB_INIT_HOST: ${DOCKER_INFLUXDB_INIT_HOST}
  SETUP_BUCKETS: ${SETUP_BUCKETS}

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.6.6
    networks:
      twinran:
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181

  kafka:
    image: confluentinc/cp-kafka:7.6.6
    ports:
      - "9092:9092"
    networks:
      twinran:
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
    depends_on:
      - zookeeper
    healthcheck:
      test: ["CMD-SHELL", "kafka-topics --bootstrap-server localhost:9092 --list"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  kafdrop:
    image: obsidiandynamics/kafdrop:4.0.1
    ports:
      - "9000:9000"
    networks:
      twinran:
    environment:
      KAFKA_BROKER_CONNECT: "kafka:9092"
      JVM_OPTS: "-Xms32M -Xmx64M"
    depends_on:
      - kafka

  influxdb:
    image: influxdb:2.7
    ports:
      - 8086:8086
    environment: *influxdb-init-common-environment
    networks:
      twinran:
    secrets:
      - influxdb2-admin-username
      - influxdb2-admin-password
      - influxdb2-admin-token
    volumes:
      - ./data/influxdb:/var/lib/influxdb2
    healthcheck:
      test: [ "CMD", "influx", "ping" ]
      interval: 30s
      timeout: 30s
      retries: 10

  influxdb_setup:
    image: "influxdb:2.7"
    depends_on:
      influxdb:
        condition:
          service_healthy
    entrypoint: [ "bash", "/usr/local/automation/influxdb2_setup.sh" ]
    networks:
      twinran:
    volumes:
      - ./influxdb2_setup.sh:/usr/local/automation/influxdb2_setup.sh
    environment: *influxdb-init-common-environment
    secrets:
      - influxdb2-admin-username
      - influxdb2-admin-password
      - influxdb2-admin-token
    logging: *default-logging

  telegraf:
    image: telegraf:1.30
    depends_on:
      kafka:
        condition: service_healthy
      influxdb:
        condition: service_healthy
    volumes:
      - ./telegraf.conf:/etc/telegraf/telegraf.conf:ro
      - ./telegraf-entrypoint.sh:/telegraf-entrypoint.sh:ro
    entrypoint: ["/telegraf-entrypoint.sh"]
    networks:
      twinran:
    environment:
      KAFKA_BROKER_URL: kafka:9092
      INFLUX_URL: http://influxdb:8086
      INFLUX_ORG: ${DOCKER_INFLUXDB_INIT_ORG}
      INFLUX_BUCKET: xapp
    secrets:
      - influxdb2-admin-token
    logging: *default-logging

  digital-twin-dashboard:
    image: ghcr.io/twinran/digital-twin-dashboard:latest
    build:
      context: ./ui
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      UI_PORT: 3000
      INFLUXDB_URL: http://influxdb:8086
      INFLUXDB_ORG: ${DOCKER_INFLUXDB_INIT_ORG}
      INFLUXDB_BUCKET: xapp
      INFLUXDB_TOKEN_FILE: /run/secrets/influxdb2-admin-token
    networks:
      twinran:
    secrets:
      - influxdb2-admin-token
    depends_on:
      influxdb:
        condition: service_healthy
      aiaas:
        condition: service_healthy
    logging: *default-logging

  xapp_kpm_twinran:
    image: ghcr.io/twinran/xapp_kpm_twinran:latest # Check README for build instructions
    logging: *default-logging
    command: "stdbuf -o0 -e0 /usr/local/flexric/xApp/c/monitor/xapp_kpm_twinran"
    environment:
      KAFKA_BROKER_URL: kafka:9092
    depends_on:
      kafka:
        condition: service_healthy
    networks:
      rfsim5g-oai-public-net:
        ipv4_address: 192.168.71.181
      twinran:
    volumes:
      - ./conf/flexric.conf:/usr/local/etc/flexric/flexric.conf

  aiaas:
    image: ghcr.io/twinran/aiaas:latest
    build: ./ai
    container_name: twinran-aiaas
    ports:
      - "${PORT:-8000}:${PORT:-8000}"
    env_file:
      - ./ai/.env
    healthcheck:
      test: >
        python -c "import http.client,os,sys;
        p=int(os.getenv('PORT','8000'));
        c=http.client.HTTPConnection('127.0.0.1',p,timeout=2);
        c.request('GET','/health');
        sys.exit(0 if c.getresponse().status==200 else 1)"
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 10s
    networks:
      twinran:
    develop:
      watch:
        - action: sync+restart
          path: ./ai/app
          target: /app/app
        - action: sync
          path: ./ai/ml-models
          target: /app/ml-models


secrets:
  influxdb2-admin-username:
    file: ./.env.influxdb2-admin-username
  influxdb2-admin-password:
    file: ./.env.influxdb2-admin-password
  influxdb2-admin-token:
    file: ./.env.influxdb2-admin-token

networks:
  rfsim5g-oai-public-net:
    external: true
  twinran:
    driver: bridge
